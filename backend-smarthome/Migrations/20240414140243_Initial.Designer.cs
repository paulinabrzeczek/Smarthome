// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend_smarthome.DAL;

#nullable disable

namespace backend_smarthome.Migrations
{
    [DbContext(typeof(SmarthomeDbContext))]
    [Migration("20240414140243_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("backend_smarthome.DAL.Entity.AddressDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ApartmentId")
                        .HasColumnType("int");

                    b.Property<string>("BuildingNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FlatNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Postcode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApartmentId")
                        .IsUnique();

                    b.ToTable("Addresss");
                });

            modelBuilder.Entity("backend_smarthome.DAL.Entity.ApartmentDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Apartments");
                });

            modelBuilder.Entity("backend_smarthome.DAL.Entity.DeviceDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("DeviceTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("DeviceTypeId")
                        .IsUnique();

                    b.HasIndex("RoomId");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("backend_smarthome.DAL.Entity.DeviceTypeDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DeviceTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "BB",
                            Value = "Bulb"
                        },
                        new
                        {
                            Id = 2,
                            Code = "TV",
                            Value = "Television"
                        },
                        new
                        {
                            Id = 3,
                            Code = "AC",
                            Value = "Air Conditioning"
                        },
                        new
                        {
                            Id = 4,
                            Code = "HS",
                            Value = "Humidity Sensor"
                        },
                        new
                        {
                            Id = 5,
                            Code = "TS",
                            Value = "Temperature Sensor"
                        },
                        new
                        {
                            Id = 6,
                            Code = "OU",
                            Value = "Outlet"
                        });
                });

            modelBuilder.Entity("backend_smarthome.DAL.Entity.RoomDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ApartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApartmentId");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("backend_smarthome.DAL.Entity.RoomTypeDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoomTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "BATHROOM",
                            Value = "Bathroom"
                        },
                        new
                        {
                            Id = 2,
                            Code = "BEDROOM",
                            Value = "Bedroom"
                        },
                        new
                        {
                            Id = 3,
                            Code = "KITCHEN",
                            Value = "Kitchen"
                        },
                        new
                        {
                            Id = 4,
                            Code = "LIVING_ROOM",
                            Value = "Living room"
                        },
                        new
                        {
                            Id = 5,
                            Code = "HALL",
                            Value = "Hall"
                        },
                        new
                        {
                            Id = 6,
                            Code = "DINING_ROOM",
                            Value = "Dining room"
                        });
                });

            modelBuilder.Entity("backend_smarthome.DAL.Entity.UserDb", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("backend_smarthome.DAL.Entity.AddressDb", b =>
                {
                    b.HasOne("backend_smarthome.DAL.Entity.ApartmentDb", "Apartment")
                        .WithOne("Address")
                        .HasForeignKey("backend_smarthome.DAL.Entity.AddressDb", "ApartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Apartment");
                });

            modelBuilder.Entity("backend_smarthome.DAL.Entity.ApartmentDb", b =>
                {
                    b.HasOne("backend_smarthome.DAL.Entity.UserDb", "User")
                        .WithMany("Apartments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("backend_smarthome.DAL.Entity.DeviceDb", b =>
                {
                    b.HasOne("backend_smarthome.DAL.Entity.DeviceTypeDb", "DeviceType")
                        .WithOne("Device")
                        .HasForeignKey("backend_smarthome.DAL.Entity.DeviceDb", "DeviceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend_smarthome.DAL.Entity.RoomDb", "Room")
                        .WithMany("Devices")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeviceType");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("backend_smarthome.DAL.Entity.RoomDb", b =>
                {
                    b.HasOne("backend_smarthome.DAL.Entity.ApartmentDb", "Apartment")
                        .WithMany("Rooms")
                        .HasForeignKey("ApartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend_smarthome.DAL.Entity.RoomTypeDb", "RoomType")
                        .WithMany()
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Apartment");

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("backend_smarthome.DAL.Entity.ApartmentDb", b =>
                {
                    b.Navigation("Address");

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("backend_smarthome.DAL.Entity.DeviceTypeDb", b =>
                {
                    b.Navigation("Device")
                        .IsRequired();
                });

            modelBuilder.Entity("backend_smarthome.DAL.Entity.RoomDb", b =>
                {
                    b.Navigation("Devices");
                });

            modelBuilder.Entity("backend_smarthome.DAL.Entity.UserDb", b =>
                {
                    b.Navigation("Apartments");
                });
#pragma warning restore 612, 618
        }
    }
}
